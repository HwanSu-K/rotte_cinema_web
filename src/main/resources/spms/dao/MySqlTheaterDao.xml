<?xml version="1.0" encoding="UTF-8"?>
<!-- 2. 동적 SQL 적용 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spms.dao.TheaterDao">
	<resultMap type="theater" id="ResultMap">
		<id column="THEATER_INDEX" property="index" />
		<result column="THEATER_NAME" property="name" />
		<result column="THEATER_SEAT_X" property="seatX" />
		<result column="THEATER_SEAT_Y" property="seatY" />
		<result column="SHOWING_INDEX" property="indexShowing" />
		<result column="SHOW_STARTTIME" property="startTime" />
		<result column="CINEMA_INDEX" property="indexCinema" />		
		<result column="CINEMA_TITLE" property="nameCinema" />
		<result column="LOCAL_CLASS" property="localClass" />
		<result column="MOVIE_INDEX" property="indexMovie" />
		<result column="MOVIE_TITLE" property="nameMovie" />
		<result column="MOVIE_LIMIT_AGE" property="limitAge" />
		<result column="MOVIE_RUNNING_TIME" property="runningTime" />
		<result column="SEAT_COUNT" property="seatCount" />
	</resultMap>

	<select id="selectList" parameterType="map"
		resultMap="ResultMap">
		SELECT A.THEATER_INDEX,A.THEATER_NAME,A.THEATER_SEAT_X,A.THEATER_SEAT_Y,B.SHOWING_INDEX,B.SHOW_STARTTIME,C.CINEMA_INDEX,C.CINEMA_TITLE,D.LOCAL_CLASS,B.MOVIE_INDEX,E.MOVIE_TITLE,E.MOVIE_LIMIT_AGE,E.MOVIE_RUNNING_TIME,
		(SELECT COUNT(*) FROM cinemadb.MOVIE_RESERV WHERE SHOWING_INDEX = B.SHOWING_INDEX AND RESERV_STATE = 1) AS SEAT_COUNT
		FROM CINEMA_THEATER A INNER JOIN MOVIE_SHOWING B ON A.THEATER_INDEX = B.THEATER_INDEX INNER JOIN CINEMA C ON A.CINEMA_INDEX = C.CINEMA_INDEX INNER JOIN CATEGORY_LOCAL D ON C.LOCAL_INDEX = D.LOCAL_INDEX  INNER JOIN MOVIE E ON B.MOVIE_INDEX = E.MOVIE_INDEX
		WHERE
		<if test="indexMovie != null">
			B.MOVIE_INDEX = #{indexMovie} AND 
		</if>  
		<if test="indexCinema != null">
			A.CINEMA_INDEX = #{indexCinema} AND
		</if>
		<choose>
			<when test="date != null">B.SHOW_DATE = #{date}</when>
			<otherwise>B.SHOW_DATE = DATE_FORMAT(NOW(),'%Y-%m-%d')</otherwise>
		</choose>
		
		ORDER BY 
		<if test="indexCinema != null">
			MOVIE_INDEX,
		</if> 
		<if test="indexMovie != null">
			CINEMA_INDEX,
		</if>
		THEATER_INDEX,SHOW_STARTTIME
	</select>
	
	<select id="selectListDefault" parameterType="map"
		resultMap="ResultMap">
		SELECT A.THEATER_INDEX,A.THEATER_NAME,A.THEATER_SEAT_X,A.THEATER_SEAT_Y,B.CINEMA_INDEX,B.CINEMA_TITLE
		FROM CINEMA_THEATER A INNER JOIN CINEMA B ON A.CINEMA_INDEX = B.CINEMA_INDEX
		ORDER BY CINEMA_INDEX,THEATER_INDEX
	</select>
	
	<select id="selectOneDefault" parameterType="int"
		resultMap="ResultMap">
		SELECT A.THEATER_INDEX,A.THEATER_NAME,A.THEATER_SEAT_X,A.THEATER_SEAT_Y,B.CINEMA_INDEX,B.CINEMA_TITLE
		FROM CINEMA_THEATER A INNER JOIN CINEMA B ON A.CINEMA_INDEX = B.CINEMA_INDEX
		WHERE A.THEATER_INDEX=#{value}
	</select>
	
	<select id="selectListAround" parameterType="map"
		resultMap="ResultMap">
		SELECT CINEMA_INDEX,(6371*acos(cos(radians(CINEMA_LAT))*cos(radians(35.8776557))*cos(radians(128.6753187)-radians(CINEMA_LNG))+sin(radians(CINEMA_LAT))*sin(radians(35.8776557)))) AS DISTANCE 
		FROM CINEMA
		GROUP BY CINEMA_INDEX,CINEMA_LAT,CINEMA_LNG
		ORDER BY DISTANCE limit 5
	</select>
	
	<select id="selectListCinema" parameterType="map" resultMap="ResultMap">
		SELECT CINEMA_INDEX,CINEMA_TITLE
		FROM CINEMA WHERE CINEMA_STATE = 1
		GROUP BY CINEMA_INDEX
	</select>
	
	<insert id="insert" parameterType="map">
		INSERT INTO CINEMA_THEATER (THEATER_NAME,CINEMA_INDEX,THEATER_SEAT_X,THEATER_SEAT_Y)
		VALUES (#{name},#{indexCinema},#{seatX},#{seatY})
	</insert>
	
	<update id="update" parameterType="map">
		UPDATE CINEMA_THEATER
		<set>
			<if test="name != null">THEATER_NAME=#{name},</if>
			<if test="indexCinema != null">CINEMA_INDEX=#{indexCinema},</if>
			<if test="seatX != null">THEATER_SEAT_X=#{seatX},</if>
			<if test="seatY != null">THEATER_SEAT_Y=#{seatY},</if>
		</set>
		WHERE THEATER_INDEX=#{index}
	</update>
</mapper>
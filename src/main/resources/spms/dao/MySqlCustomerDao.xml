<?xml version="1.0" encoding="UTF-8"?>
<!-- 2. 동적 SQL 적용 -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spms.dao.CustomerDao">
	<resultMap type="customer" id="ResultMap">
		<id column="CUSTOMER_INDEX" property="index" />
		<result column="CUSTOMER_EMAIL" property="email" />
		<result column="CUSTOMER_PASSWORD" property="password" />
		<result column="CUSTOMER_NAME" property="name" />
		<result column="CUSTOMER_BIRTH" property="birth" />
		<result column="CUSTOMER_PHONENUM" property="phonenum" />
		<result column="CUSTOMER_ZIPCODE" property="zipcode" />
		<result column="CUSTOMER_ADDRESS" property="address" />
		<result column="CUSTOMER_DETAILADDRESS" property="detailaddress" />
		<result column="CUSTOMER_ACCESS" property="access" />
		<result column="CUSTOMER_TOKEN" property="token" />
		<result column="CUSTOMER_KEY" property="key" />
		<result column="CUSTOMER_STATE" property="state" />
	</resultMap>

	<select id="selectList" parameterType="int"
		resultMap="ResultMap">
		SELECT CUSTOMER_INDEX,CUSTOMER_EMAIL,CUSTOMER_PASSWORD,CUSTOMER_NAME,CUSTOMER_BIRTH,CUSTOMER_PHONENUM,CUSTOMER_ZIPCODE,CUSTOMER_ADDRESS,CUSTOMER_DETAILADDRESS,CUSTOMER_KEY,CUSTOMER_STATE,CUSTOMER_ACCESS
		FROM CUSTOMER
		WHERE CUSTOMER_ACCESS > 0
	</select>
	
	<insert id="insert" parameterType="customer">
		INSERT INTO CUSTOMER (CUSTOMER_EMAIL,CUSTOMER_PASSWORD,CUSTOMER_NAME,CUSTOMER_BIRTH,CUSTOMER_PHONENUM,CUSTOMER_ZIPCODE,CUSTOMER_ADDRESS,CUSTOMER_DETAILADDRESS,CUSTOMER_KEY,CUSTOMER_STATE,CUSTOMER_ACCESS)
		VALUES(#{email},#{password},#{name},#{birth},#{phonenum},#{zipcode},#{address},#{detailaddress},#{key},0,1)
	</insert>
	
	<insert id="insertToken" parameterType="customer">
		INSERT INTO CUSTOMER_TOKEN (TOKEN_VALUE,CUSTOMER_INDEX)
		VALUES(#{token},#{index})
	</insert>
	
	<select id="selectOne" parameterType="int"
		resultMap="ResultMap">
		SELECT CUSTOMER_INDEX,CUSTOMER_EMAIL,CUSTOMER_PASSWORD,CUSTOMER_NAME,CUSTOMER_BIRTH,CUSTOMER_PHONENUM,CUSTOMER_ZIPCODE,CUSTOMER_ADDRESS,CUSTOMER_DETAILADDRESS,CUSTOMER_KEY,CUSTOMER_STATE,CUSTOMER_ACCESS 
		FROM CUSTOMER
		WHERE CUSTOMER_INDEX=#{value}
	</select>
	
	<select id="selectOneKey" parameterType="map"
		resultMap="ResultMap">
		SELECT CUSTOMER_EMAIL 
		FROM CUSTOMER
		WHERE CUSTOMER_KEY=#{key}
	</select>
	
	<update id="update" parameterType="map">
		UPDATE CUSTOMER
		<set>
			<if test="email != null">CUSTOMER_EMAIL=#{email},</if>
			<if test="password != null">CUSTOMER_PASSWORD=#{password},</if>
			<if test="name != null">CUSTOMER_NAME=#{name},</if>
			<if test="birth != null">CUSTOMER_BIRTH=#{birth},</if>
			<if test="phonenum != null">CUSTOMER_PHONENUM=#{phonenum},</if>
			<if test="access != null">CUSTOMER_ACCESS=#{access},</if>
		</set>
		WHERE CUSTOMER_INDEX=#{index}
	</update>
	
	<update id="updateToken" parameterType="map">
		UPDATE CUSTOMER_TOKEN
		<set>
			CUSTOMER_INDEX=#{index},
		</set>
		WHERE TOKEN_VALUE=#{token}
	</update>
	
	<update id="updateState" parameterType="map">
		UPDATE CUSTOMER
		<set>
			CUSTOMER_STATE=1,
		</set>
		WHERE CUSTOMER_KEY=#{key}
	</update>
	
	<update id="updateKey" parameterType="map">
		UPDATE CUSTOMER
		<set>
			CUSTOMER_KEY=#{key},
		</set>
		WHERE CUSTOMER_EMAIL=#{email}
	</update>
	
	<update id="updatePass" parameterType="map">
		UPDATE CUSTOMER
		<set>
			CUSTOMER_PASSWORD=#{password},
		</set>
		WHERE CUSTOMER_EMAIL=#{email}
	</update>
	
	<update id="deleteToken" parameterType="map">
		DELETE FROM CUSTOMER_TOKEN
		WHERE TOKEN_VALUE=#{token}
	</update>
	
	<select id="exist" parameterType="map"
		resultMap="ResultMap">
		SELECT CUSTOMER_INDEX,CUSTOMER_EMAIL,CUSTOMER_PASSWORD,CUSTOMER_NAME,CUSTOMER_BIRTH,CUSTOMER_PHONENUM,CUSTOMER_ZIPCODE,CUSTOMER_ADDRESS,CUSTOMER_DETAILADDRESS,CUSTOMER_KEY,CUSTOMER_STATE,CUSTOMER_ACCESS  
		FROM CUSTOMER
		WHERE CUSTOMER_EMAIL=#{email} AND CUSTOMER_STATE  >= 0
	</select>
	
	<select id="existToken" parameterType="map"
		resultMap="ResultMap">
		SELECT CUSTOMER_INDEX 
		FROM CUSTOMER_TOKEN 
		WHERE TOKEN_VALUE=#{token}
	</select>
	
	<select id="finder" parameterType="map"
		resultMap="ResultMap">
		SELECT CUSTOMER_EMAIL 
		FROM CUSTOMER
		WHERE CUSTOMER_NAME=#{name} AND CUSTOMER_BIRTH=#{birth} AND CUSTOMER_PHONENUM=#{phonenum} AND CUSTOMER_STATE > 0
		
		<if test="email != null">
		AND CUSTOMER_EMAIL=#{email}
		</if>
				
		LIMIT 1
	</select>
	
	<select id="email" parameterType="map"
		resultMap="ResultMap">
		SELECT CUSTOMER_INDEX
		FROM CUSTOMER
		WHERE CUSTOMER_EMAIL=#{email}
	</select>
</mapper>